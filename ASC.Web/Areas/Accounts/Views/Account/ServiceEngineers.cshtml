@using Microsoft.AspNetCore.Identity;
@using System.Security.Claims;
@model ASC.Web.Areas.Accounts.Models.ServiceEngineerViewModel

@inject UserManager<IdentityUser> userManager;

@{
    Layout = "_SecureLayout";
}

<div class="row"></div>

<div class="row padding-left-28px padding-right-28px">

    <div class="row z-depth-3">
        <div class="section white-text padding-left-18px blue-grey lighten-1">
            <h5>Users</h5>
        </div>
    </div>
    <div class="divider"></div>

    <div class="col s12 padding-bottom-15px">
        @if (Model.ServiceEngineers != null)
        {
            <!-- Display List of Service Engineers -->
            <table class="highlight centered" id="tblServiceEngineers">
                <thead>
                    <tr>
                        <th data-field="Email">Email</th>
                        <th data-field="UserName">Name</th>
                        <th data-field="IsActive">Is Active</th>
                        <th data-field="IsActiveImg">Is Active</th>
                        <th data-field="Actions">Edit User</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model.ServiceEngineers)
                    {
                        var identity = await userManager.GetClaimsAsync(user);
                        <tr>
                            <td>@user.Email</td>
                            <td>@user.UserName</td>
                            <td>@(Boolean.Parse(identity.SingleOrDefault(p => p.Type == "IsActive").Value))</td>
                            <td>
                                <img src="@(Boolean.Parse(identity.SingleOrDefault(p => p.Type == "IsActive").Value) ? "/images/green_tick.png" : "/images/red_cross.png")" />
                            </td>
                            <td>
                                <i class="small material-icons edit cursor-hand">
                                    mode_edit
                                    </i>
                                <form asp-controller="Account" asp-action="DeleteServiceEngineer" method="post" asp-route-email="@user.Email" style="display:inline;">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn-flat btn-small red-text" title="Delete" onclick="return confirm('Are you sure you want to delete this user?')">
                                        <i class="material-icons">delete</i>
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <!-- No records found -->
            <div class="card blue-grey lighten-1">
                <div class="card-content white-text">
                    <span class="card-title">No Service Engineers !!!</span>
                    <p>No Service Engineers found, please add a Service Engineer to system.</p>
                </div>
            </div>
        }
    </div>
    @*Detail section*@
    <div class="row z-depth-3">
        <div class="col s12 padding-eps">
            <div class="section white-text padding-left-18px blue-grey lighten-1">
                <h5>Service Engineer Details</h5>
            </div>
            <div class="divider"></div>

            <form asp-controller="Account" asp-action="ServiceEngineers" method="post" class="col s12" id="fromUser">
                <input type="hidden" asp-for="Registration.IsEdit" />
                <input type="hidden" asp-for="Registration.Email" />

                <div class="input-field col s4">
                    <input asp-for="Registration.Email" id="Input_Registration_Email" />
                    <label asp-for="Registration.Email"></label>
                </div>

                <div class="input-field col s4">
                    <input asp-for="Registration.UserName" class="validate" autocomplete="off  />
                    <label asp-for="Registration.UserName"></label>
                </div>

                <div class="input-field col s4">
                    <input asp-for="Registration.Password" class="validate" autocomplete="new-password" />
                    <label asp-for="Registration.Password"></label>
                </div>

                <div class="input-field col s4">
                    <input asp-for="Registration.ConfirmPassword" class="validate" />
                    <label asp-for="Registration.ConfirmPassword"></label>
                </div>

                <div class="input-field col s4">
                    <div class="switch">
                        <label>
                            Is Active
                            <input asp-for="Registration.IsActive" class="validate" />
                            <span class="lever"></span>
                        </label>
                    </div>
                </div>

                <div class="input-field col s4 right-align">
                    <button class="btn waves-effect waves-light btnSubmit" type="submit" name="action">
                        Create
                        <i class="material-icons right">send</i>
                    </button>
                    <button class="btn waves-effect waves-light reset red lighten-1" type="button" name="action">
                        Reset
                    </button>
                </div>

                <div class="row col s12 right-align" asp-validation-summary="All"></div>
            </form>
        </div>
    </div>

</div>
@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize DataTable to show list of Engineers
            var table = $('#tblServiceEngineers').DataTable({
                'pageLength': 3,
                // Number of records to be displayed per page
                'lengthMenu': [[3, 5, 10, -1], [3, 5, 10, 'All']]
            });

            // Set Styles For DataTable and Number of Records to be displayed in drop-down
            $('#tblServiceEngineers').css("width", "100%");
            $('select[name="tblServiceEngineers_length"]').formSelect();

            // Get the column API object
            var isActiveColumn = table.column(2);
            isActiveColumn.visible(false);

            // Handle Reset functionality
            $(document).on('click', '.reset', function () {
                $('#fromUser')[0].reset();
                $('#Input_Registration_Email').removeAttr('disabled');
                $('.btnSubmit').text('Create');
                $('#Registration_IsEdit').val('False');
            });

            // This is required to disable Email filed on Server-side model validation failure.
            if ($('#Registration_IsEdit').val() === 'True') {
                $('#Input_Registration_Email').attr('disabled', 'disabled');
            }

            // On click of Edit icon, populate the details section with details of service engineer
            $(document).on('click', '.edit', function () {
                var user = $('#tblServiceEngineers').DataTable().row($(this).parents('tr')).data();
                $('#Registration_IsEdit').val('True');
                $('#Input_Registration_Email').val(user[0]);
                $('#Input_Registration_Email').attr('disabled', 'disabled');
                $('#Registration_UserName').val(user[1]);
                $('#Registration_UserName').addClass('valid');
                $('#Registration_IsActive').prop('checked', user[2] === 'True' ? true : false);
                $('.btnSubmit').text('Save');
                M.updateTextFields();
            });

            // Set hidden Email Field to correct value from UI field
            // This is required for
            $(document).on('click', '.btnSubmit', function () {
                $('#Registration_Email').val($('#Input_Registration_Email').val());
                M.updateTextFields();
            });
        });
    </script>
}